go to https://github.com/scm-ninja/starter-web

Click Fork
Anticipatorx/ starter-web                                   ===> Check id should reflect your own id now
forked from scm-ninja/starter-web                           ===> origin repository

Clone the repository to local directory


BASIC WORKFLOW
--------------
git status
git add .
git commit -m {"message_here"}
git pull origin main                                        ===> always pull before pushing to be sure your repository is upto date
git push origin main

git restore --staged {filename}                             ===> new way of unstaging
git restore {filename}                                      ===> new way of discharge changes in working directory
--------------

git commit -am "message_here"                               ===> add + -m (works only if git is tracking the files)
git ls-files                                                ===> list of all files that git is tracking in the repository

git reset HEAD {filename_here}                              ===> unstage files (added) back to the working directory
git restore --staged {filename_here}                        ===> new way of unstaging

git checkout -- {filename_here}                             ===> discharge changes in working directory
git restore {filename_here}                                 ===> new way of discharge changes in working directory

RENAMING files
--------------

git mv {filename_here} {new_filename_here}                  ===> rename filename
mv {filename_here} {new_filename_here}                      ===> deleted file, added new file with same content

git mv {filename_here} {new_filename_here}                  ===> rename file
git mv {new_filename_here} {filename_here}                  ===> revert back (as if did not do anything)
git add -A

git mv {starts.txt} {'Adding git to an existing project'/}  ===> moving file to other folder
cd {'Adding git to an existing project'/}
mv starts.txt ..
git add -A

RENAME A FILE IN THE WINDOWS EXPLORER
git add start.txt
git add -u

DELETING files
--------------
code doomed.txt         ===> create text file
ls
git status
rm doomed.txt           ===> delete text file (untracked)
ls
git status

git rm newfile.txt                  ===> delete file (tracked)

git rm {hipster.txt}                ===> staged deletion
git reset HEAD {hipster.txt}        ===> unstage the deletion
git restore --staged {hipster.txt}  ===> new way of unstaging
git restore {hipster.txt}           ===> restore the file to the repository

rm start.txt
git status
git add -A
git commit

rm -rf {folder_name}
git status
git add -A
git status
git commit -m {"deleting {folder_name"} and all children}